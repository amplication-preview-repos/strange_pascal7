/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DocumentType as PrismaDocumentType } from "@prisma/client";

export class DocumentTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DocumentTypeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.documentType.count(args);
  }

  async documentTypes(
    args: Prisma.DocumentTypeFindManyArgs
  ): Promise<PrismaDocumentType[]> {
    return this.prisma.documentType.findMany(args);
  }
  async documentType(
    args: Prisma.DocumentTypeFindUniqueArgs
  ): Promise<PrismaDocumentType | null> {
    return this.prisma.documentType.findUnique(args);
  }
  async createDocumentType(
    args: Prisma.DocumentTypeCreateArgs
  ): Promise<PrismaDocumentType> {
    return this.prisma.documentType.create(args);
  }
  async updateDocumentType(
    args: Prisma.DocumentTypeUpdateArgs
  ): Promise<PrismaDocumentType> {
    return this.prisma.documentType.update(args);
  }
  async deleteDocumentType(
    args: Prisma.DocumentTypeDeleteArgs
  ): Promise<PrismaDocumentType> {
    return this.prisma.documentType.delete(args);
  }
}
